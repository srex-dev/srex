// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Add your models here
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  lastLogin     DateTime?
  accounts      Account[]
  sessions      Session[]
  logs          Log[]
  alerts        Alert[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SystemEvent {
  id          String    @id @default(cuid())
  type        String
  description String
  severity    String
  timestamp   DateTime  @default(now())
  metadata    Json?
  incident    Incident? @relation(fields: [incidentId], references: [id])
  incidentId  String?
}

model SystemHealth {
  id          String   @id @default(cuid())
  status      String
  cpuUsage    Float?
  memoryUsage Float?
  diskUsage   Float?
  timestamp   DateTime @default(now())
  metadata    Json?
}

model Incident {
  id          String        @id @default(cuid())
  title       String
  description String
  status      String        @default("active")
  severity    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  resolvedAt  DateTime?
  events      SystemEvent[]
}

model SystemUptime {
  id        String   @id @default(cuid())
  status    String
  timestamp DateTime @default(now())
  duration  Int? // Duration in seconds
  metadata  Json?
}

model Setting {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  metadata    Json?
}

model Log {
  id        String   @id @default(cuid())
  level     String // e.g., "info", "warning", "error"
  message   String
  source    String // e.g., "system", "application", "security"
  timestamp DateTime @default(now())
  metadata  Json?
  userId    String? // Optional reference to the user who triggered the log
  user      User?    @relation(fields: [userId], references: [id])
}

model Component {
  id           String    @id @default(cuid())
  name         String
  type         String
  status       String
  health       String?
  lastCheck    DateTime?
  responseTime Float?
  metrics      Metric[]
  alerts       Alert[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Metric {
  id          String    @id @default(cuid())
  component   Component @relation(fields: [componentId], references: [id])
  componentId String
  value       Float
  timestamp   DateTime  @default(now())
}

model Alert {
  id          String    @id @default(cuid())
  component   Component @relation(fields: [componentId], references: [id])
  componentId String
  type        String
  status      String
  message     String
  createdAt   DateTime  @default(now())
  resolvedAt  DateTime?
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
}

model HelpDoc {
  id        String   @id @default(cuid())
  title     String
  content   String
  category  String
  createdAt DateTime @default(now())
}

model LLMOutput {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  task        String
  input       Json
  output      Json
  confidence  Float?
  explanation String?
}
