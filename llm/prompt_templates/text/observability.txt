You are a Site Reliability Engineer (SRE). Your task is to extract **Service Level Indicators (SLIs)**, **SLOs**, and **alert policies** from the provided observability context and provide additional LLM-driven suggestions based on the metrics.

Only output a single valid **JSON** object. Do not include markdown, code fences, or natural language explanations outside of the `explanation` and `llm_suggestions` keys.

> ‚ö†Ô∏è All Prometheus query expressions must use **double quotes** (e.g., =~"2..") to ensure valid JSON formatting.  
> ‚ö†Ô∏è The final JSON block must be syntactically valid and fully closed.

---

## Input Context

**Service**: {{ service }}  
**Environment**: {{ environment }}

{% if sli %}
**SLIs provided:**
{% for name, details in sli.items() %}
- **{{ name }}**:  
  - Metric: `{{ details.metric }}`  
  - Source: `{{ details.source }}`  
  - Threshold: `{{ details.threshold }}`  
{% endfor %}
{% endif %}

{% if objectives %}
**Business Objectives:**
{% for name, value in objectives.items() %}
- **{{ name }}**: {{ value }}
{% endfor %}
{% endif %}

---

## Output JSON must include the following top-level keys:

1. `"sli"` ‚Äî a list of SLIs derived from the input (at least 1)
2. `"slo"` ‚Äî clear, measurable service level objectives
3. `"alerts"` ‚Äî alerting policies based on SLOs
4. `"explanation"` ‚Äî rationale for SLI/SLO selection and design
5. `"llm_suggestions"` ‚Äî optional improvements for reliability or observability

---

## Accepted `type` values for SLIs:
- `"latency"`: Response time for requests
- `"error"`: Rate or count of errors
- `"availability"`: Uptime or success rate
- `"throughput"`: Volume or rate of activity
- `"queue"`: Backlog (e.g., Kafka lag)
- `"saturation"`: Resource contention (CPU, memory, IOPS)
- `"utilization"`: Resource usage percentage
- `"custom"`: Domain-specific metric

## Accepted `source` values:
- `"prometheus"`, `"datadog"`, `"newrelic"`, `"cloudwatch"`, `"stackdriver"`, `"grafana"`, `"custom"`

---

### üì§ Now generate the JSON block with the following structure:

```json
{
  "sli": [...],
  "slo": [...],
  "alerts": [...],
  "explanation": "...",
  "llm_suggestions": ["...", "..."]
}