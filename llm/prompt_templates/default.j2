You are a Site Reliability Engineer (SRE). Generate a reliability configuration as a **strict JSON object** that includes SLIs, SLOs, alerting rules, a short explanation, and concrete improvement suggestions.

**QUANTITY TARGETS:**
- Generate approximately {{ sli_quantity }} SLIs (aim for {{ sli_quantity }} ± 2)
- Generate approximately {{ slo_quantity }} SLOs (aim for {{ slo_quantity }} ± 1)
- Generate approximately {{ alert_quantity }} alerts (aim for {{ alert_quantity }} ± 1)
- Generate approximately {{ suggestion_quantity }} suggestions (aim for {{ suggestion_quantity }} ± 2)

🛑 STRICT FIELD RULES:
- All required fields must be present and non-empty.
- The top-level 'slo' key MUST always be present, even if empty.
- For SLI objects, the `type` field must be one of: "latency", "error", "availability", "throughput", "queue", "saturation", "utilization", "custom".
- Do NOT leave any required field as an empty string, empty list, or null.
- If unsure, use a sensible default (e.g., "custom" for SLI type).
- Every SLO, SLI, and alert object MUST include a non-empty, descriptive "name" field. Do NOT omit or leave the "name" field empty for any object. If unsure, use a placeholder like 'unnamed-alert'.

📌 ONLY return a strict JSON object with closed brackets and quoted values.  
❌ DO NOT return markdown, YAML, comments, or natural language outside of the JSON.  
✅ DO NOT return empty strings or empty lists unless data truly doesn't apply.  

Your output **must** follow this exact structure and format:

{
  "sli": [
    {
      "name": "string",
      "description": "string",
      "type": "latency | error | availability | throughput | queue | saturation | utilization | custom",
      "unit": "string",
      "source": "prometheus | datadog | cloudwatch | stackdriver | grafana | newrelic | custom",
      "metric": "string"
    }
  ],
  "slo": [
    {
      "name": "string",
      "description": "string",
      "sli": "string",
      "target": float,
      "time_window": "7d | 30d | 90d"
    }
  ],
  "alerts": [
    {
      "name": "string",
      "description": "string",
      "severity": "info | warning | critical",
      "expr": "string",
      "for": "5m | 10m | 30m"
    }
  ],
  "explanation": "Explain why these SLOs and alerts were chosen and how they relate to the service's purpose and observed metrics.",
  "llm_suggestions": [
    {
      "metric": "string",
      "recommendation": "Provide a specific, actionable optimization or monitoring improvement for the selected metric, including concrete numbers (e.g., 'Set an alert if error rate exceeds 1% for 5 minutes', 'Increase SLO target for availability to 99.95%', or 'Trigger a page if latency > 200ms for 3 consecutive checks')."
    }
  ]
}

---

## Service Context

**Service Name**: {{ service_name }}
**Description**: {{ description | default("No description provided.") }}

{% if metrics %}
**Available Metrics**:
{% for metric in metrics %}
- Name: {{ metric.name }}
  - Type: {{ metric.type }}
  - Source: {{ metric.source }}
{% endfor %}
{% endif %}

{% if sli_inputs %}
**Observed SLIs**:
{% for sli in sli_inputs %}
- {{ sli.name }}: {{ sli.value }} {{ sli.unit or '' }} (Query: {{ sli.metric }})
{% endfor %}
{% endif %}

---

⚠️ ONLY return a strict JSON object. DO NOT include code blocks, headers, bullet points, or additional commentary outside the object.

## STRICT JSON BLOCK FOR LLM TO FILL
{
  "sli": [
    {% if sli_inputs %}
    // Include these observed SLIs and generate additional ones to reach {{ sli_quantity }} total:
    {% for sli in sli_inputs %}
    {
      "name": "{{ sli.name }}",
      "description": "{{ sli.description }}",
      "type": "{{ sli.type }}",
      "unit": "{{ sli.unit }}",
      "source": "{{ sli.source }}",
      "metric": "{{ sli.metric }}",
      "value": {{ sli.value }}
    }{% if not loop.last %},{% endif %}
    {% endfor %},
    {% endif %}
    // Generate {{ sli_quantity - (sli_inputs | length) }} additional SLIs to reach the target of {{ sli_quantity }} total SLIs
    {
      "name": "string",
      "description": "string",
      "type": "latency | error | availability | throughput | queue | saturation | utilization | custom",
      "unit": "string",
      "source": "prometheus | datadog | cloudwatch | stackdriver | grafana | newrelic | custom",
      "metric": "string"
    }
  ],
  "slo": [
    // Generate approximately {{ slo_quantity }} SLOs based on the SLIs above
    {
      "name": "string",
      "description": "string",
      "sli": "string (reference to SLI name)",
      "target": float,
      "time_window": "7d | 30d | 90d"
    }
  ],
  "alerts": [
    // Generate approximately {{ alert_quantity }} alerts based on the SLOs above
    {
      "name": "string",
      "description": "string",
      "severity": "info | warning | critical",
      "expr": "string (Prometheus query)",
      "for": "5m | 10m | 30m"
    }
  ],
  "explanation": "Explain why these SLOs and alerts were chosen and how they relate to the service's purpose and observed metrics.",
  "llm_suggestions": [
    // Generate approximately {{ suggestion_quantity }} actionable suggestions
    {
      "metric": "string",
      "recommendation": "Provide a specific, actionable optimization or monitoring improvement for the selected metric, including concrete numbers (e.g., 'Set an alert if error rate exceeds 1% for 5 minutes', 'Increase SLO target for availability to 99.95%', or 'Trigger a page if latency > 200ms for 3 consecutive checks')."
    }
  ]
}

IMPORTANT: ONLY return a valid JSON object. Do not include any comments, markdown, or trailing commas. All property names and string values must be in double quotes.

---

- All recommendations in 'llm_suggestions' must include at least one concrete number (threshold, percentage, duration, etc.).
- Avoid vague language; be as specific and actionable as possible.

- The 'alerts' array must always be present and contain actionable, numeric alert definitions (with name, description, threshold, duration, etc.).
- The 'slo' array must always be present, and each SLO must reference an SLI by name, include a numeric target, and a time_window.
- Always include these arrays, even if only one entry is present.

- You MUST always generate at least one actionable, numeric alert and at least one SLO referencing an SLI.
- If no alert or SLO is obvious, create a reasonable default based on the SLIs provided.
- Alerts must have a name, description, threshold, and duration.
- SLOs must reference an SLI by name, include a numeric target, and a time_window.
- Do not leave the 'alerts' or 'slo' arrays empty.

- For each SLI type (availability, latency, error, queue, saturation, utilization, throughput, custom), generate a realistic, actionable SLO and alert as shown above.
- Use the SLI's name/type for the SLO's 'sli' field and for alert descriptions.
- Set numeric targets and thresholds appropriate to the SLI type.
- Do not leave the 'alerts' or 'slo' arrays empty.